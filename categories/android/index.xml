<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Android on Tao&#39;s Notes</title>
    <link>https://zhoutao822.github.io/categories/android/</link>
    <description>Recent content in Android on Tao&#39;s Notes</description>
    <image>
      <url>https://zhoutao822.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://zhoutao822.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Jan 2020 21:30:27 +0800</lastBuildDate><atom:link href="https://zhoutao822.github.io/categories/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android-共享元素动画效果</title>
      <link>https://zhoutao822.github.io/posts/shareelement/</link>
      <pubDate>Sat, 11 Jan 2020 21:30:27 +0800</pubDate>
      
      <guid>https://zhoutao822.github.io/posts/shareelement/</guid>
      <description>共享元素可以在Activity之间或者Fragment之间实现非常舒适的动画效果，如下图所示，特别是在跳转的界面之间拥有相同的界面元素，比如同一张图片但是大小不同，同一个View但是位置不同。需要注意的是最低api需要为21，即Android LOLLIPOP。</description>
    </item>
    
    <item>
      <title>Android-Q适配-存储方式</title>
      <link>https://zhoutao822.github.io/posts/saf/</link>
      <pubDate>Sat, 26 Oct 2019 11:02:06 +0800</pubDate>
      
      <guid>https://zhoutao822.github.io/posts/saf/</guid>
      <description>Android Q之后对系统存储方式进行了调整，简而言之就是禁止开发人员随意通过路径访问操作外部存储文件，内部存储没有影响。这样做的目的很明显，即往后原生Android的文件管理器将不会出现各种App生成的乱七八糟的文件，不同类型的文件都在其各自相应的位置。</description>
    </item>
    
    <item>
      <title>Android框架-RxJava</title>
      <link>https://zhoutao822.github.io/posts/rxjava/</link>
      <pubDate>Thu, 25 Jul 2019 20:32:26 +0800</pubDate>
      
      <guid>https://zhoutao822.github.io/posts/rxjava/</guid>
      <description>Android中很多地方都需要跨线程通信，这是由于Android主线程不允许进行复杂的网络请求或者其他非常耗时的操作，否则会导致ANR，主线程只能进行UI操作，比如修改某个控件的text、设置某个控件不可见等等，因此网络请求等操作需要在其他线程中完成，当数据在其他线程中获取完毕时，通过跨线程通信将数据传到主线程中，主线程就可以直接根据数据进行UI操作。常见的跨线程通信的方式有Handler、AsyncTask、EventBus以及RxJava等，前两个是Android自带，后两者是封装好的第三方库。</description>
    </item>
    
    <item>
      <title>Material组件-Snackbar</title>
      <link>https://zhoutao822.github.io/posts/snackbar/</link>
      <pubDate>Tue, 23 Jul 2019 21:46:04 +0800</pubDate>
      
      <guid>https://zhoutao822.github.io/posts/snackbar/</guid>
      <description>Snackbar是类似与Toast的一种信息提示控件，但是与Toast不同的是Snackbar是从界面底部弹出的且支持一个点击事件，默认情况下Snackbar内部有两个子控件分别是TextView和Button，两者水平排列，TextView用于显示信息，Button用于实现点击事件。</description>
    </item>
    
    <item>
      <title>Android框架-Gson</title>
      <link>https://zhoutao822.github.io/posts/gson/</link>
      <pubDate>Sat, 20 Jul 2019 23:09:12 +0800</pubDate>
      
      <guid>https://zhoutao822.github.io/posts/gson/</guid>
      <description>json是一种数据格式，类似与键值对的形式，常用于服务器与客户端之间数据传输，以键值对形式传输的数据在客户端进行解析时必然需要对不同的key寻找其对应的value，通常来说这种解析数据的过程非常繁琐，但是没有难度，所以Google推出了Gson这个工具，用于解析json数据并直接将其实例化。</description>
    </item>
    
    <item>
      <title>Android框架-Retrofit与OkHttp</title>
      <link>https://zhoutao822.github.io/posts/retrofit/</link>
      <pubDate>Sat, 20 Jul 2019 09:58:58 +0800</pubDate>
      
      <guid>https://zhoutao822.github.io/posts/retrofit/</guid>
      <description>Http，超文本传输协议，Https，更加安全的超文本传输协议，目前大量用于客户端与服务端之间的信息交流，属于应用层协议，下面有传输层TCP协议、网络层IP协议以及数据链路层为其提供保障。以登录功能为例，每一次输入账户密码后点击登录按钮就做了一次对服务器的Http请求（POST），我们收到的结果比如账号密码错误或者登录成功等信息就是服务器对Http请求的回复。Http与Https的区别在于后者采用了SSL（Secure Socket Layer安全套接层），简而言之就是对传输的数据进行了加密。具体细节可以在&lt;a href=&#34;https://www.tutorialsteacher.com/https&#34;&gt;HTTPS Tutorials&lt;/a&gt;或者其他资料中找到。</description>
    </item>
    
    <item>
      <title>Android框架-Dagger2</title>
      <link>https://zhoutao822.github.io/posts/dagger2/</link>
      <pubDate>Tue, 02 Jul 2019 20:26:19 +0800</pubDate>
      
      <guid>https://zhoutao822.github.io/posts/dagger2/</guid>
      <description>Dagger2框架是一个依赖注入框架，它既可以用于Java Web项目也可以用于Android项目</description>
    </item>
    
    <item>
      <title>Material组件-Menu</title>
      <link>https://zhoutao822.github.io/posts/menu/</link>
      <pubDate>Mon, 24 Jun 2019 20:09:54 +0800</pubDate>
      
      <guid>https://zhoutao822.github.io/posts/menu/</guid>
      <description>Menu，不同于Button、TextView之类的控件，它不需要在布局文件中指定位置，它是用于提供给用户额外的操作选择，因此不必局限于某一个固定位置，它可以搭配任何控件。</description>
    </item>
    
  </channel>
</rss>
